# Path to your oh-my-zsh installation.
export ZSH=/Users/myair/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#autoload -U promptinit; promptinit
#prompt pure
#ZSH_THEME="pure"
ZSH_THEME="gitster"
#ZSH_THEME="avit"
#ZSH_THEME="norm"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git ruby z last-working-dir wd)
# User configuration

export PATH="/Users/myair/.rbenv/shims:/usr/local/bin:/usr/local/bin/git:/usr/bin:/bin:/usr/sbin:/sbin:/Users/myair/bin:/usr/local/bin/$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/mysql/bin:$PATH"
export ANDROID_HOME=${HOME}/Library/Android/sdk
export PATH=${PATH}:${ANDROID_HOME}/tools
export PATH=${PATH}:${ANDROID_HOME}/platform-tools
#export PATH="/Users/myair/Downloads/infer-osx-v0.4.0/infer/bin:$PATH"
# export MANPATH="/usr/local/man:$MANPATH"

#GO
export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/Developer/golang
export GOBIN=$HOME/Developer/golang/bin
export PATH=$PATH:$GOPATH/bin

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='nvim'
export REACT_EDITOR='atom'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
#
# Feed the output of ag into fzf
#ag -g "" | fzf

# Setting ag as the default source for fzf

#_gen_fzf_default_opts() {
  #local base03="234"
  #local base02="235"
  #local base01="240"
  #local base00="241"
  #local base0="244"
  #local base1="245"
  #local base2="254"
  #local base3="230"
  #local yellow="136"
  #local orange="166"
  #local red="160"
  #local magenta="125"
  #local violet="61"
  #local blue="33"
  #local cyan="37"
  #local green="64"

  ## Comment and uncomment below for the light theme.

  ## Solarized Dark color scheme for fzf
  ##export FZF_DEFAULT_OPTS="
    ##--color fg:-1,bg:-1,hl:$blue,fg+:$base2,bg+:$base02,hl+:$blue
    ##--color info:$yellow,prompt:$yellow,pointer:$base3,marker:$base3,spinner:$yellow
  ##"
  ### Solarized Light color scheme for fzf
  #export FZF_DEFAULT_OPTS="
   #--color fg:-1,bg:-1,hl:$blue,fg+:$base02,bg+:$base2,hl+:$blue
   #--color info:$yellow,prompt:$yellow,pointer:$base03,marker:$base03,spinner:$yellow
  #"
#}

#_gen_fzf_default_opts
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
  #source ~/.fzf.zsh
export FZF_DEFAULT_OPTS='--color 16,info:6,hl+:1,fg+:10'
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

 #Now fzf (w/o pipe) will use ag instead of find
#fzf

# To apply the command to CTRL-T as well

# Example aliases
# Golang alias
  alias golist="go list -f '{{join .Deps \"\n\"}}' | xargs go list -f '{{if not .Standard}}{{.ImportPath}}{{end}}'"
#application alias
  alias vim='/usr/local/bin/vim'
  alias filetree="ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'"
#config alias
  alias zshrc="nvim ~/.zshrc"
  alias vimrc="nvim ~/.vimrc"
  alias ohmyzsh="open ~/.oh-my-zsh"
  alias xvimrc="nvim ~/.xvimrc"
  alias vimconfig="nvim ~/dotfiles/vimconfig"
  alias nvimrc="nvim ~/.config/nvim/init.vim"

  alias be="bundle exec"
#fentury alias
  alias fproc="ps aux| grep"
  alias kill_all="pkill -9 -f"
  
#Syntax Highlighting enable
  source /Users/myair/Developer/Helpful\ Stuff/zsh-syntax-highlighting-master/zsh-syntax-highlighting.plugin.zsh

#  History
# Keep history in this file
  export HISTFILE=~/.zsh_history
# Max history command size
  export HISTCONTROL=ignoredups:erasedups  
  export HISTSIZE=100000                   
  export HISTFILESIZE=100000    
  #export HISTSIZE=10000
  export SAVEHIST=$HISTSIZE
# enable histroy
  setopt APPEND_HISTORY
# remove repeated,empty, and whitespace commands
  #setopt HIST_IGNORE_ALL_DUPS
  setopt HIST_IGNORE_SPACE
  setopt HIST_REDUCE_BLANKS

# Unarchive file
# example: extract file
  extract () {
   if [ -f $1 ] ; then
   case $1 in
   *.tar.bz2)   tar xjf $1        ;;
   *.tar.gz)    tar xzf $1     ;;
   *.bz2)       bunzip2 $1       ;;
   *.rar)       unrar x $1     ;;
   *.gz)        gunzip $1     ;;
   *.tar)       tar xf $1        ;;
   *.tbz2)      tar xjf $1      ;;
   *.tbz)       tar -xjvf $1    ;;
   *.tgz)       tar xzf $1       ;;
   *.zip)       unzip $1     ;;
   *.Z)         uncompress $1  ;;
   *.7z)        7z x $1    ;;
   *)           echo "I don't know how to extract '$1'..." ;;
   esac
   else
   echo "'$1' is not a valid file"
   fi
  }

# Create archive
# example: pk tar file
pk () {
 if [ $1 ] ; then
 case $1 in
 tbz)       tar cjvf $2.tar.bz2 $2      ;;
 tgz)       tar czvf $2.tar.gz  $2       ;;
 tar)      tar cpvf $2.tar  $2       ;;
 bz2)    bzip $2 ;;
 gz)        gzip -c -9 -n $2 > $2.gz ;;
 zip)       zip -r $2.zip $2   ;;
 7z)        7z a $2.7z $2    ;;
 *)         echo "'$1' cannot be packed via pk()" ;;
 esac
 else
 echo "'$1' is not a valid file"
 fi

}
